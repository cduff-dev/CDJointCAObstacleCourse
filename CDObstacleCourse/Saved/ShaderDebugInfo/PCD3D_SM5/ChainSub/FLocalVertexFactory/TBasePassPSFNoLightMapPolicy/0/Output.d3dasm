//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer View
// {
//
//   row_major float4x4 View_View_SVPositionToTranslatedWorld;// Offset:  704 Size:    64
//   float3 View_View_ViewTilePosition; // Offset:  960 Size:    12
//   float3 View_View_RelativePreViewTranslation;// Offset: 1152 Size:    12
//   float4 View_View_BufferSizeAndInvSize;// Offset: 2032 Size:    16
//   float View_View_PreExposure;       // Offset: 2084 Size:     4
//   float4 View_View_DiffuseOverrideParameter;// Offset: 2096 Size:    16
//   float4 View_View_SpecularOverrideParameter;// Offset: 2112 Size:    16
//   float4 View_View_NormalOverrideParameter;// Offset: 2128 Size:    16
//   float2 View_View_RoughnessOverrideParameter;// Offset: 2144 Size:     8
//   float View_View_OutOfBoundsMask;   // Offset: 2160 Size:     4
//   float View_View_MaterialTextureMipBias;// Offset: 2208 Size:     4
//   float View_View_UnlitViewmodeMask; // Offset: 2240 Size:     4
//   float View_View_RenderingReflectionCaptureMask;// Offset: 2860 Size:     4
//   float View_View_ShowDecalsMask;    // Offset: 3052 Size:     4
//   float View_View_bCheckerboardSubsurfaceProfileRendering;// Offset: 3552 Size:     4 [unused]
//   float3 View_View_VolumetricLightmapWorldToUVScale;// Offset: 3616 Size:    12
//   float3 View_View_VolumetricLightmapWorldToUVAdd;// Offset: 3632 Size:    12
//   float3 View_View_VolumetricLightmapIndirectionTextureSize;// Offset: 3648 Size:    12
//   float View_View_VolumetricLightmapBrickSize;// Offset: 3660 Size:     4
//   float3 View_View_VolumetricLightmapBrickTexelSize;// Offset: 3664 Size:    12
//
// }
//
// cbuffer Material
// {
//
//   float4 Material_Material_PreshaderBuffer[2];// Offset:    0 Size:    32
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// View_SharedBilinearClampedSampler    sampler      NA          NA             s0      1 
// OpaqueBasePass_DBufferATextureSampler    sampler      NA          NA             s1      1 
// Material_Texture2D_0Sampler       sampler      NA          NA             s2      1 
// View_PrimitiveSceneData           texture    byte         r/o             t0      1 
// View_VolumetricLightmapIndirectionTexture    texture   uint4          3d             t1      1 
// View_DirectionalLightShadowingBrickTexture    texture  float4          3d             t2      1 
// OpaqueBasePass_DBufferATexture    texture  float4          2d             t3      1 
// OpaqueBasePass_DBufferBTexture    texture  float4          2d             t4      1 
// OpaqueBasePass_DBufferCTexture    texture  float4          2d             t5      1 
// Material_Texture2D_0              texture  float4          2d             t6      1 
// View                              cbuffer      NA          NA            cb0      1 
// Material                          cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz 
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy  
// PRIMITIVE_ID             0   x           3     NONE    uint   x   
// SV_Position              0   xyzw        4      POS   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                5   xyzw        5   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[230], immediateIndexed
dcl_constantbuffer CB1[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_raw t0
dcl_resource_texture3d (uint,uint,uint,uint) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.x
dcl_input_ps_siv linear noperspective v4.xyz, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o5.xyzw
dcl_temps 11
sample_b_indexable(texture2d)(float,float,float,float) r0.x, v2.xyxx, t6.xyzw, s2, cb0[138].x
mad r0.x, r0.x, l(2.000000), l(-1.333300)
lt r0.x, r0.x, l(0.000000)
discard_nz r0.x
mul r0.xyzw, v4.yyyy, cb0[45].xyzw
mad r0.xyzw, v4.xxxx, cb0[44].xyzw, r0.xyzw
mad r0.xyzw, v4.zzzz, cb0[46].xyzw, r0.xyzw
add r0.xyzw, r0.xyzw, cb0[47].xyzw
div r0.xyz, r0.xyzx, r0.wwww
add r0.xyz, r0.xyzx, -cb0[72].xyzx
mad r1.xyz, cb0[133].wwww, l(0.000000, 0.000000, 1.000000, 0.000000), cb0[133].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r2.xyz, v0.yzxy, v1.zxyz
mad r2.xyz, v1.yzxy, v0.zxyz, -r2.xyzx
mul r2.xyz, r2.xyzx, v1.wwww
mul r2.xyz, r1.yyyy, r2.xyzx
mad r1.xyw, r1.xxxx, v0.xyxz, r2.xyxz
mad r1.xyz, r1.zzzz, v1.xyzx, r1.xywx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mad r2.z, cb0[134].y, l(0.500000), cb0[134].x
imul null, r0.w, v3.x, l(640)
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r0.w, r0.w, t0.xxxx
and r3.xyzw, r0.wwww, l(8, 4, 128, 256)
ine r0.w, r3.x, l(0)
lt r1.w, l(0.000000), cb0[190].w
and r0.w, r0.w, r1.w
mul r4.xy, v4.xyxx, cb0[127].zwzz
sample_l_indexable(texture2d)(float,float,float,float) r5.xyzw, r4.xyxx, t4.xyzw, s1, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r6.xyzw, r4.xyxx, t5.xyzw, s1, l(0.000000)
mad r6.z, r2.z, r6.w, r6.z
mad r6.y, r6.w, l(0.500000), r6.y
sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t3.xyzw, s1, l(0.000000)
add r5.xyz, r5.xyzx, r5.xyzx
mad r5.xyz, r1.xyzx, r5.wwww, r5.xyzx
add r5.xyz, r5.xyzx, l(-1.003922, -1.003922, -1.003922, 0.000000)
dp3 r1.w, r5.xyzx, r5.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, r5.xyzx
mov r2.xy, l(0,0.500000,0,0)
movc r2.xyz, r0.wwww, r6.xyzx, r2.xyzx
and r4.xyz, r0.wwww, r4.xyzx
movc r1.xyz, r0.wwww, r5.xyzx, r1.xyzx
if_nz r3.y
  mad r5.xyz, cb0[60].xyzx, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000), r0.xyzx
  mad r5.xyz, r5.xyzx, cb0[226].xyzx, cb0[227].xyzx
  max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r5.xyz, r5.xyzx, l(0.990000, 0.990000, 0.990000, 0.000000)
  mul r5.xyz, r5.xyzx, cb0[228].xyzx
  ftoi r6.xyz, r5.xyzx
  mov r6.w, l(0)
  ld_indexable(texture3d)(uint,uint,uint,uint) r6.xyzw, r6.xyzw, t1.xyzw
  utof r6.xyzw, r6.xyzw
  add r0.w, l(1.000000), cb0[228].w
  div r5.xyz, r5.xyzx, r6.wwww
  frc r5.xyz, r5.xyzx
  mul r5.xyz, r5.xyzx, cb0[228].wwww
  mad r5.xyz, r6.xyzx, r0.wwww, r5.xyzx
  add r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r5.xyz, r5.xyzx, cb0[229].xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r0.w, r5.xyzx, t2.yzwx, s0, l(0.000000)
else 
  mov r0.w, l(1.000000)
endif 
mad r5.xyz, -r4.xyzx, r2.xxxx, r4.xyzx
mad r5.xyz, r5.xyzx, cb0[131].wwww, cb0[131].xyzx
mul r1.w, r2.y, l(0.080000)
mad r6.xyz, -r2.yyyy, l(0.080000, 0.080000, 0.080000, 0.000000), r4.xyzx
mad r6.xyz, r2.xxxx, r6.xyzx, r1.wwww
mad r6.xyz, r6.xyzx, cb0[132].wwww, cb0[132].xyzx
ne r1.w, l(0.000000), cb0[178].w
mad r7.xyz, r6.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r5.xyzx
movc r5.xyz, r1.wwww, r7.xyzx, r5.xyzx
mul r7.xyz, cb1[1].yzwy, cb1[1].xxxx
max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.w, l(0.000000), cb0[135].x
if_nz r2.w
  imad r2.w, v3.x, l(640), l(16)
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r8.xyz, r2.w, t0.xyzx
  add r8.xyz, -r8.xyzx, cb0[60].xyzx
  imad r9.xyzw, v3.xxxx, l(640, 640, 640, 640), l(304, 288, 400, 416)
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r10.xyz, r9.x, t0.xyzx
  add r10.xyz, r0.xyzx, -r10.xyzx
  mad r8.xyz, r8.xyzx, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000), r10.xyzx
  or r9.xyz, r9.yzwy, l(44, 28, 44, 0)
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r10.x, r9.x, t0.xxxx
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r10.y, r9.y, t0.xxxx
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r10.z, r9.z, t0.xxxx
  add r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r8.xyz, r9.xyzx, |r8.xyzx|
  or r2.w, r8.y, r8.x
  or r2.w, r8.z, r2.w
  add r3.x, cb0[60].y, cb0[60].x
  add r3.x, r3.x, cb0[60].z
  mul r3.x, r3.x, l(2420.113525)
  frc r3.x, r3.x
  add r0.x, r0.y, r0.x
  add r0.x, r0.z, r0.x
  mad r0.x, r0.x, l(0.001154), r3.x
  frc r0.x, r0.x
  lt r0.x, l(0.500000), r0.x
  movc r0.xyz, r0.xxxx, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r7.xyz, r2.wwww, r0.xyzx, r7.xyzx
endif 
movc r0.xyz, r1.wwww, l(0,0,0,0), r6.xyzx
mad r0.xyz, r0.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r5.xyzx
mad r0.xyz, cb0[140].xxxx, r0.xyzx, r7.xyzx
mul r5.xyz, v4.xyxx, l(0.007812, 0.007812, 0.007812, 0.000000)
frc r5.xyz, r5.xyzx
mad r5.xyz, r5.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000), l(-64.340622, -72.465622, -64.340622, 0.000000)
mad o1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
movc r1.xy, r3.zwzz, l(2.000000,1.000000,0,0), l(0,0,0,0)
add r1.x, r1.y, r1.x
mul o1.w, r1.x, l(0.333333)
mul r1.xyz, r5.xyyx, r5.xyzx
dp3 r1.x, r1.xyzx, l(20.390625, 60.703125, 2.428121, 0.000000)
frc r1.x, r1.x
add r1.x, r1.x, l(-0.500000)
mul o3.w, r1.x, l(0.003922)
mul o0.xyz, r0.xyzx, cb0[130].yyyy
mov o0.w, l(0)
mov o2.xyz, r2.xyzx
mov o2.w, l(0.507843)
mov o3.xyz, r4.xyzx
mov o5.x, r0.w
mov o5.yzw, l(0,1.000000,1.000000,1.000000)
ret 
// Approximately 130 instruction slots used
