//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer View
// {
//
//   row_major float4x4 View_View_TranslatedWorldToClip;// Offset:    0 Size:    64
//   float3 View_View_ViewTilePosition; // Offset:  960 Size:    12
//   float3 View_View_RelativePreViewTranslation;// Offset: 1152 Size:    12
//   uint View_View_InstanceSceneDataSOAStride;// Offset: 4432 Size:     4
//
// }
//
// cbuffer LocalVF
// {
//
//   int4 LocalVF_LocalVF_VertexFetch_Parameters;// Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// View_PrimitiveSceneData           texture    byte         r/o             t0      1 
// View_InstanceSceneData            texture    byte         r/o             t1      1 
// InstanceCulling_InstanceIdsBuffer    texture    byte         r/o             t2      1 
// LocalVF_VertexFetch_TexCoordBuffer    texture  float4         buf             t3      1 
// LocalVF_VertexFetch_PackedTangentsBuffer    texture  float4         buf             t4      1 
// View                              cbuffer      NA          NA            cb0      1 
// LocalVF                           cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyz 
// ATTRIBUTE               13   x           1     NONE    uint   x   
// SV_VertexID              0   x           2   VERTID    uint   x   
// SV_InstanceID            0   x           3   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyzw
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// PRIMITIVE_ID             0   x           3     NONE    uint   x   
// TEXCOORD                 6   xyzw        4     NONE   float   xyzw
// SV_Position              0   xyzw        5      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[278], immediateIndexed
dcl_constantbuffer CB1[1], immediateIndexed
dcl_resource_raw t0
dcl_resource_raw t1
dcl_resource_raw t2
dcl_resource_buffer (float,float,float,float) t3
dcl_resource_buffer (float,float,float,float) t4
dcl_input v0.xyz
dcl_input v1.x
dcl_input_sgv v2.x, vertex_id
dcl_input_sgv v3.x, instance_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.x
dcl_output o4.xyzw
dcl_output_siv o5.xyzw, position
dcl_temps 12
and [precise(xy)] r0.xy, v1.xxxx, l(0x80000000, 0x7fffffff, 0, 0)
imul [precise(y)] null, r0.y, r0.y, l(40)
bfi [precise(y)] r0.y, l(28), l(4), r0.y, l(4)
ld_raw_indexable [precise(y)](raw_buffer)(mixed,mixed,mixed,mixed) r0.y, r0.y, t0.xxxx
iadd [precise(y)] r0.y, r0.y, v3.x
iadd [precise(z)] r0.z, v1.x, v3.x
ishl [precise(z)] r0.z, r0.z, l(2)
ld_raw_indexable [precise(z)](raw_buffer)(mixed,mixed,mixed,mixed) r0.z, r0.z, t2.xxxx
and [precise(z)] r0.z, r0.z, l(0x0fffffff)
movc [precise(x)] r0.x, r0.x, r0.y, r0.z
ishl [precise(y)] r0.y, r0.x, l(4)
ld_raw_indexable [precise(y)](raw_buffer)(mixed,mixed,mixed,mixed) r0.y, r0.y, t1.xxxx
and [precise(z)] r0.z, r0.y, l(0x000fffff)
ine [precise(w)] r0.w, r0.z, l(0x000fffff)
if_nz r0.w
  iadd [precise(w)] r0.w, r0.x, cb0[277].x
  ishl [precise(w)] r0.w, r0.w, l(4)
  ld_raw_indexable [precise](raw_buffer)(mixed,mixed,mixed,mixed) r1.xyzw, r0.w, t1.zxwy
  ishl [precise(w)] r0.w, cb0[277].x, l(1)
  iadd [precise(x)] r0.x, r0.x, r0.w
  ishl [precise(x)] r0.x, r0.x, l(4)
  ld_raw_indexable [precise(xyz)](raw_buffer)(mixed,mixed,mixed,mixed) r2.xyz, r0.x, t1.xyzx
  and [precise(xyz)] r3.xyz, r1.wyww, l(0x00007fff, 0x0000ffff, 0x00008000, 0)
  utof [precise(xy)] r4.xy, r3.xyxx
  ushr [precise(xyw)] r3.xyw, r1.yxyz, l(16, 16, 0, 16)
  utof [precise(z)] r4.z, r3.x
  add [precise(xyz)] r4.xyz, r4.yzxy, l(-32768.000000, -32768.000000, -16384.000000, 0.000000)
  mul [precise(xyz)] r4.xyz, r4.xyzx, l(0.000031, 0.000031, 0.000043, 0.000000)
  add [precise(x)] r5.x, r4.y, r4.x
  add [precise(y)] r5.y, -r4.y, r4.x
  dp2 [precise(x)] r0.x, l(1.000000, 1.000000, 0.000000, 0.000000), |r5.xyxx|
  add [precise(z)] r5.z, -r0.x, l(2.000000)
  dp3 [precise(x)] r0.x, r5.xyzx, r5.xyzx
  rsq [precise(x)] r0.x, r0.x
  mul [precise(xyw)] r4.xyw, r0.xxxx, r5.xyxz
  add [precise(x)] r0.x, r4.w, l(1.000000)
  div [precise(x)] r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  mov [precise(xy)] r5.xy, -r4.xyxx
  mul [precise(w)] r0.w, r4.y, r5.x
  mul [precise(z)] r6.z, r0.x, r0.w
  mul [precise(w)] r0.w, r4.z, r4.z
  add [precise(w)] r0.w, -r0.w, l(1.000000)
  sqrt [precise(w)] r0.w, r0.w
  mul [precise(xy)] r7.xy, r4.xyxx, r4.xyxx
  mul [precise(xy)] r7.xy, r0.xxxx, r7.xyxx
  add [precise(xy)] r6.xy, -r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  swapc [precise(x)] r0.x, r3.x, r3.z, r4.z, r0.w
  mov [precise(w)] r6.w, r5.x
  mul [precise(xyz)] r7.xyz, r3.xxxx, r6.xzwx
  mov [precise(zw)] r5.zw, r6.zzzy
  mul [precise(xyz)] r5.xyz, r0.xxxx, r5.zwyz
  add [precise(xyz)] r5.xyz, r5.xyzx, r7.xyzx
  mul [precise(xyz)] r6.xyz, r4.ywxy, r5.zxyz
  mul [precise(xyz)] r7.xyz, r4.wxyw, r5.yzxy
  add [precise(xyz)] r6.xyz, r6.xyzx, -r7.xyzx
  mov [precise(y)] r1.y, r3.y
  and [precise(xyz)] r1.xyz, r1.xyzx, l(0x0000ffff, 0x0000ffff, 0x0000ffff, 0)
  utof [precise(xyz)] r1.xyz, r1.xyzx
  add [precise(xyz)] r1.xyz, r1.xyzx, l(-32768.000000, -32768.000000, -32768.000000, 0.000000)
  ishl [precise(x)] r0.x, r3.w, l(23)
  iadd [precise(x)] r0.x, r0.x, l(0xf8800000)
  mul [precise(xyz)] r1.xyz, r0.xxxx, r1.xyzx
  mul [precise(xyz)] r3.xyz, r1.xxxx, r5.xyzx
  mul [precise(xyz)] r5.xyz, r1.yyyy, r6.xyzx
  mul [precise(xyz)] r4.xyz, r1.zzzz, r4.xywx
  div r1.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), |r1.xyzx|
  bfi [precise(x)] r0.x, l(20), l(2), r0.y, l(0)
  imad [precise(x)] r0.x, r0.x, l(160), l(16)
  ld_raw_indexable [precise(xyz)](raw_buffer)(mixed,mixed,mixed,mixed) r6.xyz, r0.x, t0.xyzx
  ubfe r0.x, l(1), l(20), r0.y
  movc r0.x, r0.x, l(-1.000000), l(1.000000)
else 
  mov [precise(xyz)] r3.xyz, l(0,0,0,0)
  mov [precise(xyz)] r5.xyz, l(0,0,0,0)
  mov [precise(xyz)] r4.xyz, l(0,0,0,0)
  mov [precise(xyz)] r2.xyz, l(0,0,0,0)
  mov [precise(xyz)] r6.xyz, l(0,0,0,0)
  mov r1.xyz, l(0,0,0,0)
  mov r0.x, l(0)
endif 
iadd r0.y, v2.x, cb1[0].w
ishl r0.w, r0.y, l(1)
bfi r1.w, l(31), l(1), r0.y, l(1)
ld_indexable(buffer)(float,float,float,float) r7.xyzw, r1.wwww, t4.xyzw
ld_indexable(buffer)(float,float,float,float) r8.xyz, r0.wwww, t4.xyzw
mul r9.xyz, r7.yzxy, r8.xyzx
mad r8.xyz, r7.xyzx, r8.yzxy, -r9.xyzx
mul r8.xyz, r7.wwww, r8.xyzx
mul r9.xyz, r7.yzxy, r8.xyzx
mad r8.xyz, r8.zxyz, r7.zxyz, -r9.xyzx
mul r8.xyz, r7.wwww, r8.xyzx
mul r9.xyz, r1.xxxx, r3.xyzx
mul r1.xyw, r1.yyyy, r5.xyxz
mul r10.xyz, r1.zzzz, r4.xyzx
mul r11.xyz, r1.xywx, r8.yyyy
mad r8.xyw, r8.xxxx, r9.xyxz, r11.xyxz
mad o0.xyz, r8.zzzz, r10.xyzx, r8.xywx
mul r1.xyz, r1.xywx, r7.yyyy
mad r1.xyz, r7.xxxx, r9.xyzx, r1.xyzx
mad o1.xyz, r7.zzzz, r10.xyzx, r1.xyzx
mul [precise(xyz)] r1.xyz, r3.xyzx, v0.xxxx
mul [precise(xyz)] r3.xyz, r5.xyzx, v0.yyyy
add [precise(xyz)] r1.xyz, r1.xyzx, r3.xyzx
mul [precise(xyz)] r3.xyz, r4.xyzx, v0.zzzz
add [precise(xyz)] r1.xyz, r1.xyzx, r3.xyzx
add [precise(xyz)] r1.xyz, r2.xyzx, r1.xyzx
add [precise(xyz)] r2.xyz, r6.xyzx, -cb0[60].xyzx
add [precise(xyz)] r1.xyz, r1.xyzx, cb0[72].xyzx
mul [precise(xyz)] r2.xyz, r2.xyzx, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000)
add [precise(xyz)] r1.xyz, r1.xyzx, r2.xyzx
imul null, r0.y, r0.y, cb1[0].y
ld_indexable(buffer)(float,float,float,float) r0.yw, r0.yyyy, t3.zxwy
mul [precise] r2.xyzw, r1.xxxx, cb0[0].xyzw
mul [precise] r3.xyzw, r1.yyyy, cb0[1].xyzw
add [precise] r2.xyzw, r2.xyzw, r3.xyzw
mul [precise] r3.xyzw, r1.zzzz, cb0[2].xyzw
add [precise] r2.xyzw, r2.xyzw, r3.xyzw
add [precise] o5.xyzw, r2.xyzw, cb0[3].xyzw
mul o1.w, r0.x, r7.w
mov o0.w, l(0)
mov o2.xy, r0.ywyy
mov o2.zw, l(0,0,0,0)
mov [precise(xyz)] o4.xyz, r1.xyzx
mov o4.w, l(1.000000)
mov [precise(x)] o3.x, r0.z
ret 
// Approximately 126 instruction slots used
